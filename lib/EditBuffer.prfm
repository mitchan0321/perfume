class EditBuffer BufferBase;

EditBuffer method init () {
    init-constructor;
};

EditBuffer method init-constructor () {
    sets Src <nil>;
    sets File <nil>;
    sets BufferName <nil>;
    sets Modify <nil>;
    sets NewFile <nil>;
};

EditBuffer method load-content (path) {
    result := <nil>;
    f ::= new File;
    sets NewFile <nil>;
    sets Src [vector];
    try {
        $f open $path mode: i;
	$f each do: {| r |
	    $Src append! $r;
	};
        result := <t>;
    }
    catch: {| e |
        sets NewFile <t>;
	result := <nil>;
    }
    fin: {
	$f close;
    };

    sets File $path;
    if {$path = ""} {sets File "anonymous.pmacs"};
    buff-name ::= $path split sep: "/" : last : car;
    $buff-name ?? {buff-name := "*no named*"};
    BufferManager regist-buffer [self] $buff-name;

    return $result;
};

EditBuffer method get-path () {
    return $File;
};

EditBuffer method buffer-select (from to block) {
    $from each to: $to do: {| i |
	if {and [$i < [$Src len]] [$i >= 0]}
	then: {
	    yield $block $Src,$i;
	}
	else: {
	    yield $block "";
	};
    };
};

EditBuffer method get-buffer-line (line) {
    $Src ?? {return <nil>};
    if {$line < 0} {return <nil>};
    if {$line >= [$Src len]} {
	return <nil>;
    } {
	if {[$Src len] <= 0} {return <nil>};
	return [$Src get $line];
    };
};

EditBuffer method get-buffer-length () {
    return [$Src ??? [$Src len] 0];
};

EditBuffer method insert-string-at (input y x) {
    sets Modify <t>;
    if {true? Src} {
	return [$Src insert-string-at $input $y $x];
    };
    return (0 0);
};

EditBuffer method delete-character-at (y x) {
    sets Modify <t>;
    if {true? Src} {
	return [$Src delete-character-at $y $x];
    };
    return (0 0 "");
};

EditBuffer method backdelete-character-at (y x) {
    sets Modify <t>;
    if {true? Src} {
	return [$Src backdelete-character-at $y $x];
    };
    return (0 0 "");
};

EditBuffer method append-string (str) {
    sets Modify <t>;
    if {true? Src} {
	return [$Src append-string $str];
    };
    return (0 0 "");
};

EditBuffer method modify? () {
    return $Modify;
};

EditBuffer method newfile? () {
    return $NewFile;
};
