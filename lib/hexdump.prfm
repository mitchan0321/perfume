defun hexdump (path) {
    f := `File($path mode: i);
    b ::= bulk;
    $b read [$f fd?];
    $f close;

    $b seek 0;
    set eof nil;
    set p 0;
    while {false? eof} do: {
	[1 .. 16 do: {| i | symbol ["c%d" fmt $i]}] := [1 .. 16 do: {$b get}];

	1 each to: 16 do: {| i |
	    s ::= symbol ["c%d" fmt $i];
	    if {nil? [set $s]} {
		set $s "  ";
		set eof t;
	    } {
		set $s ["%02x" fmt [set $s]];
	    };
	};
	println ["%08d  %v %v %v %v %v %v %v %v  %v %v %v %v %v %v %v %v" fmt
		 $p $c1 $c2 $c3 $c4 $c5 $c6 $c7 $c8 $c9 $c10 $c11 $c12 $c13 $c14 $c15 $c16];
	$p ++ 16;
    };
};
