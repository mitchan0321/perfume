###
### Pmacs editor buffer command definition.
###

defcommand next-buffer desc: "Switch a buffer in the current window to next buffer. Buffer selection rule is buffer name sort by ascending." {
    | main window |
    $main next-buffer;
    result ALL;
};

defcommand previous-buffer desc: "Switch a buffer in the current window to previous buffer. Buffer selection rule is buffer name sort by ascending." {
    | main window |
    $main previous-buffer;
    result ALL;
};

defcommand next-buffer-another-window desc: "Switch a buffer in the next another window to next buffer." {
    | main window |
    $main roll-current-window;
    $main next-buffer;
    $main roll-current-window-backward;
    result ALL;
};

defcommand previous-buffer-another-window desc: "Switch a buffer in the next another window to previous buffer." {
    | main window |
    $main roll-current-window;
    $main previous-buffer;
    $main roll-current-window-backward;
    result ALL;
};

defcommand kill-buffer desc: "Kill the current buffer. If the buffer is modified, require acknowledge." {
    | main window |
    buff ::= $window get-buffer;
    if [$buff modify?] {
        mini-input-fully-yes-or-no $main $window
            prompt: "This buffer is modified, really kill? [yes or ESC]: "
            yes-proc: {
		$main unbind-buffer;
		return ALL;
	    }
        ;;
        return ALL;
    };
    
    $main unbind-buffer;
    result ALL;
};

defcommand buffer-list desc: "Display all buffers list." {
    | main window |
    BufferManager unregist-buffer "*Buffer List*";
    buff ::= new EditBuffer;
    $buff load-content "buffer list" :init-only buffer-name: "*Buffer List*";
    $main bind-buffer [$window get-window-name] $buff;
    $buff set-raise-low;
    $buff clear-all;

    l ::= BufferManager get-buffer-list-order-by-newer;
    format := "%1v %1v%1v %1v%1v%1v %-${maxlen}w %6v %-7v %-w";
    maxlen ::= $l map {| _i | $_i display-width : + 2} : max;
    if {$maxlen < ["Buffer name" display-width]} {maxlen ::= "Buffer name" display-width};

    $buff append-string  "<<< Buffer list >>>";
    REM {
    $buff append-string  "  * Select buffer - Move cursor to buffer line and press Enter key";
    $buff append-string ["    or press shortcut key(0-9). Press " . 
        [get-keybind-string $window "buffer-list-completion" : replace ',' "or"] " to name completion."];
    $buff append-string ["  * Delete buffer - Move cursor to buffer line and press \"" .
        [get-keybind-string $window "buffer-list-delete" : replace ',' "or"] "\" key."];
    $buff append-string ["  * Save buffer - Move cursor to buffer line and press \"" .
        [get-keybind-string $window "buffer-list-save" : replace ',' "or"] "\" key."];
    $buff append-string ["  * Open another window - Move cursor to buffer line and press \"" .
        [get-keybind-string $window "buffer-list-open-next-window" : replace ',' "or"] "\" or \""
        [get-keybind-string $window "buffer-list-open-previous-window" : replace ',' "or"] "\" key."];
    $buff append-string ["  * Save buffer name - Move cursor to buffer line and press \"" .
        [get-keybind-string $window "buffer-list-store-buffer" : replace ',' "or"] "\" key."];
    };
    $buff append-string "  Help: [ENTER] or \"0\"--\"9\" open buffer, [Oo]pen other window,";
    $buff append-string "        [s]ave buffer, [d]elete buffer, [m]emory buffer name";
    $buff append-string "";
    $buff append-string [$format expand : fmt "#" "e" "t" "m" "p" "n" "Buffer name" "Length" "Mode" "Content path"];
    $buff append-string [$format expand : fmt "-" "-" "-" "-" "-" "-" "-----------" "------" "----" "------------"];
    shortcut-ind := 1;
    $l each do: {| buff-name |
	display-buffer ::= BufferManager get-buffer $buff-name;
	$buff append-string [
	    $format expand : fmt
            [[$shortcut-ind <= 10] ??? [$shortcut-ind % 10] " "]
            [$display-buffer get-encoding-digest]
	    [[$display-buffer includeCR?] ??? "d" "u"]
	    [[$display-buffer modify?]  ??? "*" " "]
	    [[$display-buffer protect?] ??? "%" " "]
	    [[$display-buffer newfile?] ??? "?" " "]
	    ["<" . $buff-name ">"]
	    [$display-buffer get-buffer-length]
            [{$display-buffer get-buffer-mode} ?? "-"]
	    [$display-buffer get-content]
        ];
        $shortcut-ind ++;
    };
    $buff no-modify;
    $buff set-protect;
    result SELF;
};

defcommand jump-to-buffer desc: "Switch to specified the buffer in buffer list." {
    | main window |
    buff ::= $window get-buffer;
    geom ::= $window get-geom;
    (line col) ::= $window get-source-index $buff $geom;
    r ::= $buff get-buffer-line $line;
    $r ?? {
	show-message "No buffer name specified.";
	return SELF;
    };
    l ::= $r =~ $BUFFER_LINK;
    if {nil? $l} {
	show-message "No buffer name specified.";
	return SELF;
    };

    s ::= $l car : get 2;
    target-buff ::= BufferManager find-buffer $s;
    $target-buff ?? {
	show-message "No buffer name specified.";
	return SELF;
    };
    $main bind-buffer [$window get-window-name] $target-buff;
    result SELF;
};

defcommand buffer-list-completion desc: "Completion buffer by name and switch to the buffer. Specified by keyboard interactive in mini-window." {
    | main window |

    set _index -1;
    set _list [BufferManager get-buffer-list];

    mini-input-until-enter $main $window
        prompt: "Buffer name: "
        completion-proc: {| value |
            if {[$_list len] = 0 } {
                $MainWindow set-mini-input-prompt "Buffer name (no match completion): ";
                return ALL;
            };
            setc _index [$_index +  1];
            if {$_index >= [$_list len] } {
                setc _index 0;
            };
            str ::= $_list get $_index;
            $MainWindow set-mini-input-prompt ["Buffer name (" . [$_list len] " match(es) completion): "];
            $main mini-input-value-override $str [$str len];
            return ALL;
        }
        completion-back-proc: {| value |
            if {[$_list len] = 0 } {
                $MainWindow set-mini-input-prompt "Buffer name (no match completion): ";
                return ALL;
            };
            setc _index [$_index -  1];
            if {$_index < 0 } {
                setc _index [$_list len : - 1];
            };
            str ::= $_list get $_index;
            $MainWindow set-mini-input-prompt ["Buffer name (" . [$_list len] " match(es) completion): "];
            $main mini-input-value-override $str [$str len];
            return ALL;
        }
        edit-proc: {| value |
            try {
                if {$value = ""} {
                    setc _list [BufferManager get-buffer-list];
                } {
                    setc _list [[BufferManager get-buffer-list] filter {| n | $n =~ :text :nocase [$value rquote]}];
                };
            } catch: {
                setc _list ();
            };
            setc _index -1;
            if {[$_list len] > 0} {
                $MainWindow set-mini-input-prompt ["Buffer name (" . [$_list len] " match(es) completion): "];
                if {[$_list len] = 1} {
                    setc _index 0;
                };
            } {
                $MainWindow set-mini-input-prompt "Buffer name (no match completion): ";
            };
            return ALL;
        }
        enter-proc: {| value |
            if {or {[$_list len] = 0} {$_index < 0}} {
                show-message :bell "No buffer name specified.";
                return ALL;
            };
            s ::= $_list get $_index;
            target-buff ::= BufferManager find-buffer $s;
            $target-buff ?? {
                show-message :bell "No buffer name specified.";
                return ALL;
            };
            $main bind-buffer [$window get-window-name] $target-buff;
            return ALL;
        }
    ;;
    
    return ALL;
};

defcommand buffer-list-shortcut-1 desc: "Select buffer by shortcut key \"1\"." {
    | main window |
    jump-to-buffer-shortcut '^1 ' $main $window;
    result SELF;
};

defcommand buffer-list-shortcut-2 desc: "Select buffer by shortcut key \"2\"." {
    | main window |
    jump-to-buffer-shortcut '^2 ' $main $window;
    result SELF;
};

defcommand buffer-list-shortcut-3 desc: "Select buffer by shortcut key \"3\"." {
    | main window |
    jump-to-buffer-shortcut '^3 ' $main $window;
    result SELF;
};

defcommand buffer-list-shortcut-4 desc: "Select buffer by shortcut key \"4\"." {
    | main window |
    jump-to-buffer-shortcut '^4 ' $main $window;
    result SELF;
};

defcommand buffer-list-shortcut-5 desc: "Select buffer by shortcut key \"5\"." {
    | main window |
    jump-to-buffer-shortcut '^5 ' $main $window;
    result SELF;
};

defcommand buffer-list-shortcut-6 desc: "Select buffer by shortcut key \"6\"." {
    | main window |
    jump-to-buffer-shortcut '^6 ' $main $window;
    result SELF;
};

defcommand buffer-list-shortcut-7 desc: "Select buffer by shortcut key \"7\"." {
    | main window |
    jump-to-buffer-shortcut '^7 ' $main $window;
    result SELF;
};

defcommand buffer-list-shortcut-8 desc: "Select buffer by shortcut key \"8\"." {
    | main window |
    jump-to-buffer-shortcut '^8 ' $main $window;
    result SELF;
};

defcommand buffer-list-shortcut-9 desc: "Select buffer by shortcut key \"9\"." {
    | main window |
    jump-to-buffer-shortcut '^9 ' $main $window;
    result SELF;
};

defcommand buffer-list-shortcut-0 desc: "Select buffer by shortcut key \"0\"." {
    | main window |
    jump-to-buffer-shortcut '^0 ' $main $window;
    result SELF;
};

defun jump-to-buffer-shortcut (key main window) {
    buff ::= $window get-buffer;
    found := <nil>;
    $buff buffer-select 0 [$buff get-buffer-length : - 1] {| r |
        if {$r =~ $key} {
            found := <t>;
            l ::= $r =~ $BUFFER_LINK;
            if {nil? $l} {
                show-message :bell "No buffer name specified.";
                return SELF;
            };
            s ::= $l car : get 2;
            target-buff ::= BufferManager find-buffer $s;
            $target-buff ?? {
                show-message :bell "No buffer name specified.";
                return SELF;
            };
            $main bind-buffer [$window get-window-name] $target-buff;
        };
    };
    if {! $found} {
        show-message :bell "No shortcut line.";
    };
};

defcommand buffer-list-delete desc: "Delete the selected buffer in buffer list." {
    | main window |
    buff ::= $window get-buffer;
    geom ::= $window get-geom;
    (line col) ::= $window get-source-index $buff $geom;
    r ::= $buff get-buffer-line $line;
    $r ?? {
	show-message :bell "No buffer name specified.";
	return SELF;
    };
    l ::= $r =~ $BUFFER_LINK;
    if {nil? $l} {
	show-message :bell "No buffer name specified.";
	return SELF;
    };

    s ::= $l car : get 2;
    target-buff ::= BufferManager find-buffer $s;
    $target-buff ?? {
	show-message :bell "No buffer name specified.";
	return SELF;
    };

    if [$target-buff modify?] {
        mini-input-fully-yes-or-no $main $window
            prompt: "This buffer is modified, really kill? [yes or ESC]: "
            yes-proc: {
		$main delete-buffer $target-buff;
                $window apply-command $main $window "" buffer-list;
		return ALL;
            }
        ;;
	return ALL;
    };
    $main delete-buffer $target-buff;
    $window apply-command $main $window "" buffer-list;

    result ALL;
};

defcommand buffer-list-save desc: "Save the selected buffer in buffer list." {
    | main window |
    buff ::= $window get-buffer;
    geom ::= $window get-geom;
    (line col) ::= $window get-source-index $buff $geom;
    r ::= $buff get-buffer-line $line;
    $r ?? {
	show-message :bell "No buffer name specified.";
	return SELF;
    };
    l ::= $r =~ $BUFFER_LINK;
    if {nil? $l} {
	show-message :bell "No buffer name specified.";
	return SELF;
    };

    s ::= $l car : get 2;
    target-buff ::= BufferManager find-buffer $s;
    $target-buff ?? {
	show-message :bell "No buffer name specified.";
	return SELF;
    };

    if [$target-buff modify?] {
        $main set-mini-input-end-hook {
            $window apply-command $main $window "" buffer-list;
        };
        save-buffer $main $window $target-buff;
    } {
	show-message "Buffer not modified.";
    };

    result ALL;
};

defcommand store-buffer desc: "Store current window buffer name." {
    | main window |
    buff ::= $window get-buffer;
    name ::= $buff get-buffer-name;
    setconf BUFFER_MEMORY $name;
    show-message "Store buffer name: " $name;
    result ALL;
};

defcommand bind-stored-buffer desc: "Bind stored buffer to current window." {
    | main window |
    buff ::= BufferManager find-buffer $BUFFER_MEMORY;
    if $buff {
        $main bind-buffer [$window get-window-name] $buff;
    } {
        show-message "Buffer name not found: " $BUFFER_MEMORY;
    };
    result ALL;
};

defcommand buffer-list-store-buffer desc: "Store current buffer list line buffer name." {
    | main window |
    buff ::= $window get-buffer;
    geom ::= $window get-geom;
    (line col) ::= $window get-source-index $buff $geom;
    r ::= $buff get-buffer-line $line;
    $r ?? {
	show-message "No buffer name specified.";
	return SELF;
    };
    l ::= $r =~ $BUFFER_LINK;
    if {nil? $l} {
	show-message "No buffer name specified.";
	return SELF;
    };

    s ::= $l car : get 2;
    setconf BUFFER_MEMORY $s;
    show-message "Store buffer name: " $s;
    result ALL;
};


defcommand buffer-list-open-next-window desc: "Open current buffer on next window." {
    | main window |
    buff ::= $window get-buffer;
    geom ::= $window get-geom;
    (line col) ::= $window get-source-index $buff $geom;
    r ::= $buff get-buffer-line $line;
    $r ?? {
	show-message "No buffer name specified.";
	return SELF;
    };
    l ::= $r =~ $BUFFER_LINK;
    if {nil? $l} {
	show-message "No buffer name specified.";
	return SELF;
    };
    buff-name ::= $l car : get 2;
    cwin ::= $main get-current-window;
    if {$main get-window-list : len : <= 1} {
        $main create-split-vertical-window window-name: [$cwin get-window-name];
    };
    owin ::= $main get-window-list-without-current : car;
    cbuff ::= BufferManager find-buffer $buff-name;
    if $cbuff {
        $main bind-buffer [$owin get-window-name] $cbuff;
        $main roll-current-window;
    } {
        show-message "No such buffer: " $buff-name;
    };
    return ALL;
};

defcommand buffer-list-open-previous-window desc: "Open current buffer on previous window." {
    | main window |
    buff ::= $window get-buffer;
    geom ::= $window get-geom;
    (line col) ::= $window get-source-index $buff $geom;
    r ::= $buff get-buffer-line $line;
    $r ?? {
	show-message "No buffer name specified.";
	return SELF;
    };
    l ::= $r =~ $BUFFER_LINK;
    if {nil? $l} {
	show-message "No buffer name specified.";
	return SELF;
    };
    buff-name ::= $l car : get 2;
    cwin ::= $main get-current-window;
    if {$main get-window-list : len : <= 1} {
        $main create-split-vertical-window window-name: [$cwin get-window-name];
    };
    owin ::= $main get-window-list-without-current : last : car;
    cbuff ::= BufferManager find-buffer $buff-name;
    if $cbuff {
        $main bind-buffer [$owin get-window-name] $cbuff;
        $main roll-current-window-backward;
    } {
        show-message "No such buffer: " $buff-name;
    };
    return ALL;
};
