begin {
    User ::= dict;
    Group ::= dict;
    
    awk sep: ":" {
	$User set $3 $1;
    } "/etc/passwd";
    awk sep: ":" {
	$Group set $3 $1;
    } "/etc/group";

    Perms ::= vector("---" "--x" "-w-" "-wx" "r--" "r-x" "rw-" "rwx");
    Bits  ::= vector("---" "--S" "-G-" "-GS" "U--" "U-S" "UG-" "UGS");

    defun ll (args: l) {
    
	if {$l null?}
        then: {
	    call ll [msort [file list "."]];
	}
	else: {
	    if {[$l len] = 1} then: {
		f ::= "" . [$l car];
		if [file dir? $f] then: {
		    call ll [msort [glob [$f . [if {[$f at -1]  = "/"} "" "/"]]]];
		} else: {
		    ll-sub $f;
		};
		return;
	    };

	    $l each do: {| f |
		ll-sub ["" . $f];
	    };
	};
    };

    defun ll-sub (f) {
	try {
	    d ::= dict [file stat ["" . $f]];
	} catch: {
	    println "can't access \'" $f "\'.";
	    return;
	};

	println ["%v%13v %-8v %-8v %v %10d %v" fmt
		 $d,type
		 [ll-sub-mkperm $d,perm]
		 [if [$User set? $d,uid] $User,[$d get uid] $d,uid]
		 [if [$Group set? $d,gid] $Group,[$d get gid] $d,gid]
		 [strftime "%Y/%m/%d %H:%M" $d,mtime]
		 $d,size
		 [if {$d,type != "l"} $f [$f . " -> " $d,symbolic-link]]];
    };

    defun ll-sub-mkperm (p) {
        result := "";
	f ::= "%04o" fmt $p;
	$result append! [$Perms get [$f at 1 : int]];
	$result append! [$Perms get [$f at 2 : int]];
	$result append! [$Perms get [$f at 3 : int]];
	$result append! ",";
	$result append! [$Bits get [$f at 0 : int]];
	return $result;
    };
};
