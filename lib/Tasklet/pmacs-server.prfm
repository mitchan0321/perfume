new Task : proc pmacs-server {
    pmacs-server-config;
    
    l ::= socket-server $PMACS-SERVER-PORT;
    $SELF set-terminate-proc {
        try {close $l} catch: {};
    };
    
    loop do: {
        (f a p) ::= SysCall accept $l;
        println "[" [get-name] "] accept - IP: " [host-address-string $a] ", port: " $p;

        SysCall new-task [get-name] {
            pmacs-server-config;
            (f) := $ARGS;
            
            r ::= SysCall gets $f;
            if {nil? $r} {
                $f close;
                println "[" [get-name] "] disconnect from client.";
                SysCall exit 1;
            };
            if {[$r clean] != $PMACS-SERVER-KEY} {
                $f puts "4"; ## bad key
                $f close;
                println "[" [get-name] "] key authentication failed.";
                SysCall exit 4;
            };
            $f puts "0";  ## key OK
            
            r ::= SysCall gets $f;
            if $r {
                r ::= $r clean;
                if {$r at 0 : != "/"} {
                    r ::= $ENV,HOME . "/" $r;
                };
                println "[" [get-name] "] open file: " $r;
                try {
                    mtime ::= file stat $r : assoc-value mtime;
                } catch: {
                    mtime := 0;
                };
                SysCall apply-editor {
                    open-file $r;
                    target-buff ::= BufferManager get-buffer-by-path $r;
                    if $target-buff {
                        $target-buff set-unregist-proc {
                            $f puts "0";
                            $f close;
                            try {
                                if {eq? $mtime [file stat $r : assoc-value mtime]} {
                                    show-message :bell ["(git commit) " . $r " file not changed, do not commit."];
                                } {
                                    show-message ["(git commit) " . $r " file wrote."];
                                };
                            } catch: {| e |
                                show-message :bell ["(git commit) " . $r " file not found, <" $e,0 "> #" $e,1];
                            };
                        };
                        window ::= $MainWindow get-current-window : get-window-name;
                        $MainWindow bind-buffer $window $target-buff;
                    };
                };
            };
        } $f;
        
        ### cleaning child process status (ignore).
        while {$SELF child-exited-any?} do: {
            $SELF get-child-exit-status-any;
        };
        SysCall sleep 1000;
    };
};

