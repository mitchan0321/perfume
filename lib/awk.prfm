defun awk (body
	   sep: sep
	   args: files) {

    if {! [set? sep]} {set sep nil};
    
    if [$files null?] 
    then: {
	awk-sub $body $sep $stdin $INFILE;
    }
    else: {
	$files each do: {| n |
	    try {
		f := `File($n mode: i);
		awk-sub $body $sep $f $n;
	    }
	    catch: {| e |
		println file: $stderr [$e cdr];
	    }
	    fin: {
		if [set? f] then: {
		    $f close;
		    unset f;
		};
	    };
	};
    };
};

defun awk-sub (body sep file file-name) {
    begin local: [dict-closure $body] {
	@FILENAME := $file-name;
    };
    try {
        cnt := 0;
        $file each do: {| r |
	    cnt ::= $cnt + 1;
	    if $sep
	    then: {
		l ::= $r split sep: $sep;
	    }
	    else: {
		l ::= $r split;
	    }
	    ;

	    begin local: [dict-closure $body] {
		@NF ::= $l len;
		@NR := $cnt;
		set [symbol "0"] $r;
		set n 1;
		$l each  do: {| i |
		    set [symbol [$n string]] $i;
		    $n ++;
		};
	        $body eval;
	    };
	};
    };
};
