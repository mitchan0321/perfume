class CombiWindow WindowBase;

CombiWindow method init (main y x line column) {
    apply {WindowBase method? init :};
    
    curs ::= $main get-curs;

    sets BufferCurs	  [curs-new-window
			   $curs
			   $y 		 	$x
			   [$line - 1]  	[$column - 1]
	];

    sets StatusLineCurs	  [curs-new-window
			   $curs
			   [$y + $line : - 1]   $x
			   1 	     		$column
	];
    
    sets VerticalLineCurs [curs-new-window
			   $curs
			   $y 		 	[$x + $column : - 1]
			   [$line - 1] 		1
	];

    sets Activate <nil>;
    sets FreeCursor <nil>;
    sets KeyBinding [dict()];
    load-keybind;
};

CombiWindow method activate () {
    set-window-color-default $BufferCurs EDIT_BUFFER;
    set-window-color-default $StatusLineCurs ACTIVE_STATUS_LINE;
    set-window-color-default $VerticalLineCurs ACTIVE_VERT_LINE;
    sets Activate <t>;
};

CombiWindow method diactivate () {
    set-window-color-default $BufferCurs INACTIVE_EDIT_BUFFER;
    set-window-color-default $StatusLineCurs INACTIVE_STATUS_LINE;
    set-window-color-default $VerticalLineCurs INACTIVE_VERT_LINE;
    sets Activate <nil>;
};

CombiWindow method refresh () {
    curs-refresh $StatusLineCurs;
    curs-refresh $VerticalLineCurs;	    
    curs-refresh $BufferCurs;
};

CombiWindow method set-cursor () {
    geom ::= get-geom;
    curs-move $BufferCurs $geom,CursorLine $geom,CursorColumn;
};

CombiWindow method display (msg) {
    curs-print $BufferCurs $msg $DISPLAY_ENCODING 0 0;
};

CombiWindow method clear () {
    curs-clear $StatusLineCurs;
    curs-clear $VerticalLineCurs;	    
    curs-clear $BufferCurs;
};

CombiWindow method get-curs () {
    return $BufferCurs;
};

CombiWindow method render () {
    clear;

    if $Activate {geom-trimming};
    
    (y x) ::= curs-get-screen-size $BufferCurs;
    win ::= get-window-name;
    buff ::= get-buffer;
    buff-name ::= $buff get-buffer-name;
    geom ::= get-geom;
    (cy cx) ::= get-source-index $buff $geom;

    curs-print $StatusLineCurs [
	  "--[%v%v]#%v - (%d,%d) - %v <%v> %v" fmt
	  [[$buff modify?] ??? "*" " "]
	  [$FreeCursor ??? "F" " "]
	  [$win split sep: "#" : get 1]
	  [$geom,ViewLine + $geom,CursorLine] [$geom,ViewColumn + $geom,CursorColumn]
	  $buff-name 
	  [[$buff get-path] ?? "*no file*"]
	  ["-" repeat $x]
#	  $cy $cx
#	  $geom,CursorLine $geom,CursorColumn $geom,IndexColumn.SAVE
	]
	$DISPLAY_ENCODING 0 0;
    
    render-vertical-line;

    i := 0;
    $buff buffer-select $geom,ViewLine [$geom,ViewLine + $y : - 1] {
	| src |
	curs-render-line
	    $BufferCurs
	    $i $geom,ViewColumn 0 $src
	    $DEFAULT_TAB_WIDTH $DISPLAY_ENCODING;
	$i ++;
    };
    if {[$geom,ViewLine + $y : - 1] >= [$buff get-buffer-length]} {
	if {[[$buff get-buffer-length] - $geom,ViewLine] < $y} {
	    curs-render-line
		$BufferCurs
		[[$buff get-buffer-length] - $geom,ViewLine] 0 0
		"[eof]"
		$DEFAULT_TAB_WIDTH $DISPLAY_ENCODING;
	    curs-color $BufferCurs [[$buff get-buffer-length] - $geom,ViewLine] 0 5 $ColorDB,EOF_MARK 0;
	};
    };
};

CombiWindow method get-source-index (buff geom) {
    y ::= $geom,ViewLine + $geom,CursorLine;
    x := $geom,IndexColumn.SAVE;
    src ::= $buff get-buffer-line $y;
    $src ?? {return ($y 0)};
    return ($y [curs-pos-to-index $src $x $DEFAULT_TAB_WIDTH]);
};

CombiWindow method get-cursor-index (buff sy sx) {
    src ::= $buff get-buffer-line $sy;
    $src ?? {return ($sy 0)};
    return ($sy [curs-index-to-pos $src $sx $DEFAULT_TAB_WIDTH]);
};

CombiWindow method geom-trimming () {
    geom ::= get-geom;
    buff ::= get-buffer;
    (l c) ::= curs-get-screen-size $BufferCurs;
    if {! $FreeCursor} {
	(cy cx) ::= get-source-index $buff $geom;
	(line col) ::= get-cursor-index $buff $cy $cx;
	new-col ::= $col - $geom,ViewColumn;
	if {$new-col < 0} {
	    $geom set! ViewColumn $col;
	    $geom set! CursorColumn 0;
	} {
	    $geom set! CursorColumn $new-col;
	};
    };

    fit-to-cursor $geom $l $c;
};

CombiWindow method render-vertical-line () {
    win ::= get-window-name;
    buff ::= get-buffer;
    
    buff-name ::= $buff get-buffer-name;
    geom ::= get-geom;
    (y x) ::= curs-get-screen-size $BufferCurs;

    curs-clear $VerticalLineCurs;
    len ::= $buff get-buffer-length;

    if {$len = 0} {
        lines := $y;
    } {
	lines ::= $y * $y : / $len;
	if {$lines < 0}  {lines := 0};
	if {$lines > $y} {lines := $y};
    };

    if {$len = 0} {
        start := 0;
    } {
	start ::= $y * $geom,ViewLine : / $len;
	if {$start < 0}   {start := 0};
	if {$start >= $y} {start := [$y - 1]};
    };

    0 each to: $lines do: {| i |
	curs-print $VerticalLineCurs "|" $DISPLAY_ENCODING [$i + $start] 0;
	if $Activate {
	    curs-color $VerticalLineCurs [$i + $start] 0 1 $ColorDB,ACTIVE_VERT_LINE_HILIGHT 0;
	} {
	    curs-color $VerticalLineCurs [$i + $start] 0 1 $ColorDB,INACTIVE_VERT_LINE_HILIGHT 0;
	};
    };
};

CombiWindow method page-down () {
    sets FreeCursor <t>;

    buff ::= get-buffer;
    geom ::= get-geom;
    (y x) ::= curs-get-screen-size $BufferCurs;

    new-y ::= $geom,ViewLine + $y;
    if {$new-y > [[$buff get-buffer-length] - $y : + 1]} {new-y ::= [$buff get-buffer-length] - $y : + 1};
    if {$new-y < 0} {new-y := 0};
    $geom set! ViewLine $new-y;
};

CombiWindow method page-up () {
    sets FreeCursor <t>;

    geom ::= get-geom;
    (y x) ::= curs-get-screen-size $BufferCurs;

    new-y ::= $geom,ViewLine - $y;
    if {$new-y < 0} {new-y := 0};
    $geom set! ViewLine $new-y;
};

CombiWindow method move-down () {
    # sets FreeCursor <t>;

    buff ::= get-buffer;
    geom ::= get-geom;
    (y x) ::= curs-get-screen-size $BufferCurs;

    if {[$geom,ViewLine + $geom,CursorLine] >= [$buff get-buffer-length]} {return};
    set line [$geom,CursorLine + 1];
    if {$line >= $y} {
	set line [$line - 1];
	new-y ::= $geom,ViewLine + 1;
	if {$new-y > [$buff get-buffer-length]} {new-y ::= $buff get-buffer-length};
	$geom set! ViewLine $new-y;
    };
    $geom set! CursorLine $line;    
};

CombiWindow method move-up () {
    # sets FreeCursor <t>;

    geom ::= get-geom;
    (y x) ::= curs-get-screen-size $BufferCurs;

    set line [$geom,CursorLine - 1];
    if {$line < 0} {
	set line 0;
	new-y ::= $geom,ViewLine - 1;
	if {$new-y < 0} {new-y := 0};
	$geom set! ViewLine $new-y;
    };
    $geom set! CursorLine $line;
};

CombiWindow method move-right () {
    sets FreeCursor <nil>;

    geom ::= get-geom;
    buff ::= get-buffer;
    (cy cx) ::= get-source-index $buff $geom;
    r ::= $buff get-buffer-line $cy;
    if $r {
	if {$cx >= [$r len]} {
            cx := 0;
	    cy ::= $cy + 1;
	} {
	    cx ::= $cx + 1;
	};
    };
    (line col) ::= get-cursor-index $buff $cy $cx;
    
    $geom set! CursorLine [$line - $geom,ViewLine];
    $geom set! CursorColumn [$col - $geom,ViewColumn];
    $geom set! IndexColumn.SAVE $col;
    (sy sx) ::= curs-get-screen-size $BufferCurs;
    fit-to-cursor $geom $sy $sx;
};

CombiWindow method move-left () {
    sets FreeCursor <nil>;

    geom ::= get-geom;
    buff ::= get-buffer;
    (cy cx) ::= get-source-index $buff $geom;
    if {$cx > 0} {
	cx ::= $cx - 1;
    } {
	if {$cy > 0} {
	    cy ::= $cy - 1;
	    cx ::= $buff get-buffer-line $cy : len;
	};
    };
    (line col) ::= get-cursor-index $buff $cy $cx;

    $geom set! CursorLine [$line - $geom,ViewLine];
    $geom set! CursorColumn [$col - $geom,ViewColumn];
    $geom set! IndexColumn.SAVE $col;
    (sy sx) ::= curs-get-screen-size $BufferCurs;
    fit-to-cursor $geom $sy $sx;
};

CombiWindow method insert-string (input) {
    sets FreeCursor <nil>;

    buff ::= get-buffer;
    geom ::= get-geom;
    (y x) ::= get-source-index $buff $geom;
    (y x) ::= $buff insert-string-at $input $y $x;
    (new-y new-x) ::= get-cursor-index $buff $y $x;
    $geom set! IndexColumn.SAVE $new-x;
    $geom set! CursorLine [$new-y - $geom,ViewLine];
    $geom set! CursorColumn [$new-x - $geom,ViewColumn];
    (sy sx) ::= curs-get-screen-size $BufferCurs;
    fit-to-cursor $geom $sy $sx;
};

CombiWindow method delete-character () {
    sets FreeCursor <nil>;

    buff ::= get-buffer;
    geom ::= get-geom;
    (y x) ::= get-source-index $buff $geom;
    (iy ix c) ::= $buff delete-character-at $y $x;
    (new-y new-x) ::= get-cursor-index $buff $iy $ix;
    $geom set! IndexColumn.SAVE $new-x;
    $geom set! CursorLine [$new-y - $geom,ViewLine];
    $geom set! CursorColumn [$new-x - $geom,ViewColumn];
    (sy sx) ::= curs-get-screen-size $BufferCurs;
    fit-to-cursor $geom $sy $sx;
};

CombiWindow method backdelete-character () {
    sets FreeCursor <nil>;

    buff ::= get-buffer;
    geom ::= get-geom;
    (y x) ::= get-source-index $buff $geom;
    (iy ix c) ::= $buff backdelete-character-at $y $x;
    (new-y new-x) ::= get-cursor-index $buff $iy $ix;
    $geom set! IndexColumn.SAVE $new-x;
    $geom set! CursorLine [$new-y - $geom,ViewLine];
    $geom set! CursorColumn [$new-x - $geom,ViewColumn];
    (sy sx) ::= curs-get-screen-size $BufferCurs;
    fit-to-cursor $geom $sy $sx;
};

CombiWindow method fit-to-cursor (geom l c) {
    if {$geom,CursorLine >= $l} {
	y ::= $geom,CursorLine - $l : + 1 : + $geom,ViewLine;
	if {$y < 0} {y := 0};
	$geom set! ViewLine $y;
	$geom set! CursorLine [$l - 1];
    };
    if {$geom,CursorLine < 0} {
	$geom set! ViewLine [$geom,ViewLine + $geom,CursorLine];
	$geom set! CursorLine 0;
    };
	    
    if {$geom,CursorColumn >= $c} {
	x ::= $geom,CursorColumn - $c : + 1 : + $geom,ViewColumn;
	if {$x < 0} {x := 0};
	$geom set! ViewColumn $x;
	$geom set! CursorColumn [$c - 1];
    };
    if {$geom,CursorColumn < 0} {
	$geom set! ViewColumn [$geom,ViewColumn + $geom,CursorColumn];
	$geom set! CursorColumn 0;
    };
};

CombiWindow method load-keybind () {
    $LIB_PATH each do: {| i |
	if {file exists? [$i . "/" $COMBIWINDOW_BINDFILE]} {
	    try {load [$i . "/" $COMBIWINDOW_BINDFILE]} catch: {| e | throw $e};
	    break;
	};
    };
};

CombiWindow method setkey (key command) {
    $KeyBinding set $key $command;
};

CombiWindow method apply-keybind (main window key) {
    if {string? $key} {
	command ::= $KeyBinding get KEY_INPUT_CHAR;
	body ::= get-command $command;
	if {block? $body} {
	    result ::= yield $body $main $window $key;
	    return $result;
	};
	return <nil>;
    };
    command ::= $KeyBinding get $key;
    body ::= get-command $command;
    if {block? $body} {
	result ::= yield $body $main $window;
	return $result;
    } {
	show-message ["Not binding key: " . $key];
    };
    return <nil>;
};

CombiWindow method get-screen-size () {
    return [curs-get-screen-size $BufferCurs];
};

CombiWindow method set-freecursor (flag) {
    sets FreeCursor $flag;
};

CombiWindow method destroy () {
    curs-destroy-window $BufferCurs;
    curs-destroy-window $StatusLineCurs;
    curs-destroy-window $VerticalLineCurs;
    sets BufferCurs <nil>;
    sets StatusLineCurs <nil>;
    sets VerticalLineCurs <nil>;
};
