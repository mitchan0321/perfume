$KeyBinding set KEY_F1		{| main window | $main roll-current-window;				result ALL};

$KeyBinding set KEY_F2		{| main window |
    name ::= $window get-window-name;
    $main add-create-window-hook {$main create-full-window window-name: $name};
    $main send-key-event (KEY_RESIZE);
													result ALL};

$KeyBinding set KEY_F3		{| main window |
    name ::= $window get-window-name;
    $main add-create-window-hook {$main create-split-vertical-window window-name: $name};
    $main send-key-event (KEY_RESIZE);
													result ALL};

$KeyBinding set KEY_F4		{| main window |
    name ::= $window get-window-name;
    $main add-create-window-hook {$main create-split-vertical-window window-name: $name div: 3};
    $main send-key-event (KEY_RESIZE);
													result ALL};

$KeyBinding set KEY_F5		{| main window |
    name ::= $window get-window-name;
    $main add-create-window-hook {$main create-split-vertical-window window-name: $name div: 4};
    $main send-key-event (KEY_RESIZE);
													result ALL};

$KeyBinding set KEY_F6		{| main window |
    name ::= $window get-window-name;
    $main add-create-window-hook {$main create-split-horizontal-window window-name: $name};
    $main send-key-event (KEY_RESIZE);
													result ALL};

$KeyBinding set KEY_F7		{| main window |
    name ::= $window get-window-name;
    $main add-create-window-hook {$main create-split-horizontal-window window-name: $name div: 3};
    $main send-key-event (KEY_RESIZE);
													result ALL};

$KeyBinding set KEY_F8		{| main window |
    name ::= $window get-window-name;
    $main add-create-window-hook {$main create-split-horizontal-window window-name: $name div: 4};
    $main send-key-event (KEY_RESIZE);
													result ALL};
													
$KeyBinding set KEY_F9		{| main window |
    name ::= $window get-window-name;
    $main add-create-window-hook {$main create-split-cross-window window-name: $name};
    $main send-key-event (KEY_RESIZE);
													result ALL};

$KeyBinding set KEY_F12		{| main window | $main roll-buffer;					result ALL};

$KeyBinding set KEY_NPAGE	{| main window | $window page-down;					result SELF};
$KeyBinding set KEY_PPAGE	{| main window | $window page-up;					result SELF};
$KeyBinding set KEY_DOWN	{| main window | $window move-down;					result SELF};
$KeyBinding set KEY_UP		{| main window | $window move-up;					result SELF};
$KeyBinding set KEY_RIGHT	{| main window | $window move-right;					result SELF};
$KeyBinding set KEY_LEFT	{| main window | $window move-left;					result SELF};

$KeyBinding set KEY_INPUT_CHAR	{| main window key | $window insert-string $key;			result ALL};
$KeyBinding set CTRL_I		{| main window | $window insert-string "\t";				result ALL};
$KeyBinding set CTRL_M		{| main window | $window insert-string "\r";				result ALL};
$KeyBinding set KEY_DC		{| main window | $window delete-character;				result ALL};
$KeyBinding set KEY_BACKSPACE	{| main window | $window backdelete-character;				result ALL};

$KeyBinding set KEY_F11		{| main window |
    $main mini-input-start "" prompt: "test prompt: ";
    $main add-mini-input-callback $window {| main window in-key value |
        if {eq? $in-key KEY_ESC} {
	    $main mini-input-end;
	    debug-message ["input data: " . $value];
	};
    };
													result ALL};
$KeyBinding set KEY_F10		{| main window |
    $main mini-input-start "" prompt: "Command: ";
    $main add-mini-input-callback $window {| main window in-key value |
        if {eq? $in-key CTRL_M} {
	    $main mini-input-end;

	    buff ::= $window get-buffer;
	    $buff append-string ["> " . $value];
	    try {
	        result ::= $value eval;
	        $buff append-string ["Command result: " . [$result string]];
            } catch: {| e |
	        $buff append-string ["<" . [$e car ] "># " [$e cdr]];
	    };
	};
    };
													result ALL};
