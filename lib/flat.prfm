#
# flat - output all available methods.
# syntax: flat object | class-name
#

defun flat (o) {
    set h [dict];
    flat-sub $o $h;

    set l ();
    $h each do: {| m c |
        $l append! ["" . $c "::" $m];
    };
    [lsort $l] each do: {| p | println $p};
};

defun flat-sub (o h) {
    [$o vars] each do: {| m |

	set t [type? [$o var? $m]];
	if {or [eq? $t NATIVE] [eq? $t FUNC]} {
	    if [or [eq? [type? $o] OBJECT] [eq? [type? $o] SYMBOL]] {
	        if {$h set? $m} else: {$h set $m $o};
	    } {
	        if {$h set? $m} else: {$h set $m [$o var? @name]};
	    };
	};

    };

    [$o delegate?] each do: {| c |
	flat-sub $c $h;
    };
};
