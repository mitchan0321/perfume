#
# Object::?
#
Object method ? () {self};

#
# Object::?? val --- Nil coalescing operator.
#
Object method ?? (a) {
    return [self];
};

Block method ?? (a) {
    s ::= [self] eval;
    if {symbol? $s} {return $s};
    return [$s ?? $a];
};

Bool method ?? (a) {
    if {nil? [self]} else: {return <t>};
    if [block? $a] {return [$a eval]};
    return $a;
};

#
# Object::??? true-val false-val --- 3 operand operater.
#
Object method ??? (a b) {
    if {block? $a} {return [$a eval]};
    return $a;
};

Block method ??? (a b) {
    s ::= [self] eval;
    if {symbol? $s} {
        if {block? $a} {return [$a eval]};
        return $a
    };
    return [$s ??? $a $b];
};

Bool method ??? (a b) {
    if [self]
    then: {
        if {block? $a} {return [$a eval]};
	return $a;
    }
    else: {
        if {block? $b} {return [$b eval]};
	return $b;
    };
};

Object method instance? (class) {
    if {object? [self]} else: {return <nil>};
    l ::= __class_tree__ [self] ();
    if {$l find $class} {return <t>};
    return <nil>;
};

defun __class_tree__ (o result) {
    l ::= $o delegate?;
    if {$l null?} {return $result};
    $l each do: {| i |
        $result << $i;
        __class_tree__ $i $result;
    };
    return $result;
};
